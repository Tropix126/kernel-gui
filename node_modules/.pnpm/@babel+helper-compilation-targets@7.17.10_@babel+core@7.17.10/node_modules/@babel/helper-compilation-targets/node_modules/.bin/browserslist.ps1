#!/usr/bin/env pwsh
$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent

$exe=""
$pathsep=":"
$env_node_path=$env:NODE_PATH
$new_node_path="C:\Users\Tropical\Documents\GitHub\kernel-gui\node_modules\.pnpm\browserslist@4.20.3\node_modules\browserslist\node_modules;C:\Users\Tropical\Documents\GitHub\kernel-gui\node_modules\.pnpm\browserslist@4.20.3\node_modules;C:\Users\Tropical\Documents\GitHub\kernel-gui\node_modules\.pnpm\node_modules;C:\Users\Tropical\Documents\GitHub\kernel-gui\node_modules;C:\Users\Tropical\Documents\GitHub\node_modules;C:\Users\Tropical\Documents\node_modules;C:\Users\Tropical\node_modules;C:\Users\node_modules;C:\node_modules;C:\Users\Tropical\Documents\GitHub\kernel-gui\node_modules\.pnpm\@babel+helper-compilation-targets@7.17.10_@babel+core@7.17.10\node_modules\@babel\helper-compilation-targets\node_modules;C:\Users\Tropical\Documents\GitHub\kernel-gui\node_modules\.pnpm\@babel+helper-compilation-targets@7.17.10_@babel+core@7.17.10\node_modules\@babel\node_modules;C:\Users\Tropical\Documents\GitHub\kernel-gui\node_modules\.pnpm\@babel+helper-compilation-targets@7.17.10_@babel+core@7.17.10\node_modules"
if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {
  # Fix case when both the Windows and Linux builds of Node
  # are installed in the same directory
  $exe=".exe"
  $pathsep=";"
} else {
  $new_node_path="/mnt/c/Users/Tropical/Documents/GitHub/kernel-gui/node_modules/.pnpm/browserslist@4.20.3/node_modules/browserslist/node_modules:/mnt/c/Users/Tropical/Documents/GitHub/kernel-gui/node_modules/.pnpm/browserslist@4.20.3/node_modules:/mnt/c/Users/Tropical/Documents/GitHub/kernel-gui/node_modules/.pnpm/node_modules:/mnt/c/Users/Tropical/Documents/GitHub/kernel-gui/node_modules:/mnt/c/Users/Tropical/Documents/GitHub/node_modules:/mnt/c/Users/Tropical/Documents/node_modules:/mnt/c/Users/Tropical/node_modules:/mnt/c/Users/node_modules:/mnt/c/node_modules:/mnt/c/Users/Tropical/Documents/GitHub/kernel-gui/node_modules/.pnpm/@babel+helper-compilation-targets@7.17.10_@babel+core@7.17.10/node_modules/@babel/helper-compilation-targets/node_modules:/mnt/c/Users/Tropical/Documents/GitHub/kernel-gui/node_modules/.pnpm/@babel+helper-compilation-targets@7.17.10_@babel+core@7.17.10/node_modules/@babel/node_modules:/mnt/c/Users/Tropical/Documents/GitHub/kernel-gui/node_modules/.pnpm/@babel+helper-compilation-targets@7.17.10_@babel+core@7.17.10/node_modules"
}
if ([string]::IsNullOrEmpty($env_node_path)) {
  $env:NODE_PATH=$new_node_path
} else {
  $env:NODE_PATH="$env_node_path$pathsep$new_node_path"
}

$ret=0
if (Test-Path "$basedir/node$exe") {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "$basedir/node$exe"  "$basedir/../../../../../../browserslist@4.20.3/node_modules/browserslist/cli.js" $args
  } else {
    & "$basedir/node$exe"  "$basedir/../../../../../../browserslist@4.20.3/node_modules/browserslist/cli.js" $args
  }
  $ret=$LASTEXITCODE
} else {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "node$exe"  "$basedir/../../../../../../browserslist@4.20.3/node_modules/browserslist/cli.js" $args
  } else {
    & "node$exe"  "$basedir/../../../../../../browserslist@4.20.3/node_modules/browserslist/cli.js" $args
  }
  $ret=$LASTEXITCODE
}
$env:NODE_PATH=$env_node_path
exit $ret
